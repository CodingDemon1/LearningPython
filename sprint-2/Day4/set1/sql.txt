1.Problem: Create a Customers table / collection with the following fields: id (unique identifier), name, email, address, and phone_number.

            CREATE TABLE Customers (
                id INT PRIMARY KEY,
                name VARCHAR(100),
                email VARCHAR(100),
                address VARCHAR(255),
                phone_number VARCHAR(50)
            );

2.Problem: Insert five rows / documents into the Customers table / collection with data of your choice.

                INSERT INTO Customers (id, name, email, address, phone_number) VALUES 
                (1, 'nitish', 'Nitish@gmail.com', 'Hazaribagh', '123-456-7890'),
                (2, 'kundan', 'kundan@gmail.com', 'Bangalore', '123-456-7891'),
                (3, 'suraj', 'suraj@gmail.com', 'Ranchi', '123-456-7892'),
                (4, 'rahul', 'rahul@gmail.com', 'Bokaro', '123-456-7893'),
                (5, 'aman', 'aman@gmail.com', 'Gomia', '123-456-7894');

3.Problem: Write a query to fetch all data from the Customers table / collection.
                select *
                from Customers

4.Problem: Write a query to select only the name and email fields for all customers.
                select name,email
                from Customers

5.Problem: Write a query to fetch the customer with the id of 3.
                SELECT * 
                FROM Customers
                WHERE id=3

6.Problem: Write a query to fetch all customers whose name starts with 'A'.
                SELECT * 
                FROM Customers 
                WHERE name LIKE 'A%';

7.Problem: Write a query to fetch all customers, ordered by name in descending order.
                SELECT * 
                FROM Customers 
                ORDER BY name DESC;

8.Problem: Write a query to update the address of the customer with id 4.
                UPDATE Customers
                SET address='Patna'
                WHERE id=4;

9.Problem: Write a query to fetch the top 3 customers when ordered by id in ascending order.
                SELECT * 
                FROM Customers 
                ORDER BY id ASC 
                LIMIT 3;

10.Problem: Write a query to delete the customer with id 2.
                DELETE FROM Customers 
                WHERE id = 2;

11.Problem: Write a query to count the number of customers.
                SELECT COUNT(*) 
                FROM Customers;

12.Problem: Write a query to fetch all customers except the first two when ordered by id in ascending order.
                SELECT * 
                FROM Customers 
                ORDER BY id ASC 
                OFFSET 2;

13.Problem: Write a query to fetch all customers whose id is greater than 2 and name starts with 'B'.
                SELECT *
                FROM Customers
                WHERE id>2 AND name like "B%";

14.Problem: Write a query to fetch all customers whose id is less than 3 or name ends with 's'.
                SELECT *
                FROM Customers
                WHERE id<3 OR name like '%s';

15.Problem: Write a query to fetch all customers where the phone_number field is not set or is null.
                SELECT * 
                FROM Customers 
                WHERE phone_number IS NULL;



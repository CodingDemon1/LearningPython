**Problem 26:**
Create a **`Rides`** table / collection with the fields defined above.
        CREATE TABLE Rides (
            id INT PRIMARY KEY,
            driver_id INT,
            passenger_id INT,
            start_location VARCHAR(255),
            end_location VARCHAR(255),
            distance DECIMAL(5,2),
            ride_time DECIMAL(5,2),
            fare DECIMAL(6,2)
        );

**Problem 27:**
Insert five rows / documents into the **`Rides`** table / collection with data of your choice.
        INSERT INTO Rides (id, driver_id, passenger_id, start_location, end_location, distance, ride_time, fare) VALUES 
        (1, 101, 201, 'Uptown', 'Downtown', 15.2, 25.5, 20.5),
        (2, 102, 202, 'Airport', 'Downtown', 25.3, 40.5, 35.5),
        (3, 103, 203, 'Downtown', 'Suburbs', 10.1, 20.0, 15.0),
        (4, 104, 204, 'Suburbs', 'Airport', 20.5, 35.0, 30.0),
        (5, 105, 205, 'Downtown', 'Uptown', 14.0, 23.0, 18.5);

**Problem 28:**
Write a query to fetch all rides, ordered by **`fare`** in descending order.
        SELECT * 
        FROM Rides 
        ORDER BY fare DESC;

**Problem 29:**
Write a query to calculate the total **`distance`** and total **`fare`** for all rides.
        SELECT SUM(distance) AS total_distance, SUM(fare) AS total_fare 
        FROM Rides;

**Problem 30:**
Write a query to calculate the average **`ride_time`** of all rides.
        SELECT AVG(ride_time) AS average_ride_time
        FROM Rides

**Problem 31:**
Write a query to fetch all rides whose **`start_location`** or **`end_location`** contains 'Downtown'.
        SELECT * 
        FROM Rides 
        WHERE start_location LIKE '%Downtown%' OR end_location LIKE '%Downtown%';

**Problem 32:**
Write a query to count the number of rides for a given **`driver_id`**.
        SELECT COUNT(*) 
        FROM Rides 
        WHERE driver_id = 101;

**Problem 33:**
Write a query to update the **`fare`** of the ride with **`id`** 4.
        UPDATE Rides 
        SET fare = 32.5 
        WHERE id = 4;

**Problem 34:**
Write a query to calculate the total **`fare`** for each **`driver_id`**.
        SELECT driver_id, SUM(fare) AS total_fare 
        FROM Rides 
        GROUP BY driver_id;

**Problem 35:**
Write a query to delete the ride with **`id`** 2.
        DELETE FROM Rides 
        WHERE id = 2;
